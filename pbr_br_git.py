#!/usr/bin/python3.9
#!/usr/bin/env python
# coding: utf-8

import datetime
import logging
import pathlib
import urllib
import urllib.parse
import warnings
from io import StringIO
from time import sleep

import pandas as pd
import pymysql
import requests
import yaml

start_time = datetime.datetime.now()
warnings.filterwarnings("ignore")


# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ª–æ–≥–µ—Ä–∞
logging.basicConfig(
    filename="log_journal_pbr.log",
    level=logging.INFO,
    format=(
        "%(asctime)s - %(levelname)s - %(funcName)s: %(lineno)d - %(message)s"
    ),
)
# –ó–∞–≥—Ä—É–∂–∞–µ–º yaml —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
with open(
    str(pathlib.Path(__file__).parent.absolute()) + "/settings.yaml", "r"
) as yaml_file:
    settings = yaml.safe_load(yaml_file)
telegram_settings = pd.DataFrame(settings["telegram"])
sql_settings = pd.DataFrame(settings["sql_db"])
br_settings = pd.DataFrame(settings["br"])
gtp_settings = pd.DataFrame(settings["gtp"])

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ telegram –Ω–∞ –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–∞–ª–æ–≤ (—É–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ yaml —Ñ–∞–π–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫)


def telegram(text):
    msg = urllib.parse.quote(str(text))
    for channel in range(len(telegram_settings.index)):
        bot_token = str(telegram_settings.bot_token[channel])
        channel_id = str(telegram_settings.channel_id[channel])

        requests.adapters.DEFAULT_RETRIES = 5
        s = requests.session()
        s.keep_alive = False

        s.post(
            "https://api.telegram.org/bot"
            + bot_token
            + "/sendMessage?chat_id="
            + channel_id
            + "&text="
            + msg,
            timeout=10,
        )


# –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–Ω–µ–∫—Ç–∞ –∫ –±–∞–∑–µ Mysql (–¥–ª—è –≤—ã–±–æ—Ä–∞ –±–∞–∑—ã –∑–∞–¥–∞—Ç—å –ø–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä —á–∏—Å–ª–æ–º !!! –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0 !!!!!)


def connection(i):
    host_yaml = str(sql_settings.host[i])
    user_yaml = str(sql_settings.user[i])
    port_yaml = int(sql_settings.port[i])
    password_yaml = str(sql_settings.password[i])
    database_yaml = str(sql_settings.database[i])
    return pymysql.connect(
        host=host_yaml,
        user=user_yaml,
        port=port_yaml,
        password=password_yaml,
        database=database_yaml,
    )


id_message = str(int(datetime.datetime.now().timestamp()))
try:
    telegram("–°—Ç–∞—Ä—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ü–ë–† –≤ –±–∞–∑—É pbr_br \n ID: " + id_message)
except Exception as exc:
    print(exc)
# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–ø–∏—Å–∫—É –ì–¢–ü
date_download = str(
    (datetime.datetime.today() + datetime.timedelta(hours=1)).strftime(
        "%d.%m.%Y"
    )
)

AuthByUserName = requests.post(
    "https://br.so-ups.ru/webapi/Auth/AuthByUserName/",
    data=br_settings.br_auth[0],
    verify=False,
)

if AuthByUserName.status_code == 200:
    print(AuthByUserName.status_code)
if AuthByUserName.status_code != 200:
    try:
        telegram(
            "–ù–µ—É—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ br.so-ups.ru. –°—Ç–∞—Ç—É—Å: "
            + str(AuthByUserName.status_code)
            + "\n ID: "
            + id_message
        )
    except Exception as exc:
        print(exc)
    while AuthByUserName.status_code != 200:
        AuthByUserName = requests.post(
            "https://br.so-ups.ru/webapi/Auth/AuthByUserName/",
            data=br_settings.br_auth[0],
            verify=False,
        )
        print(AuthByUserName.status_code)
        sleep(5)

CsvTable = requests.get(
    "https://br.so-ups.ru/webapi/api/Export/Csv/Gtp.aspx?date="
    + date_download
    + "&gtpIds="
    + gtp_settings.gtp_dict[0],
    cookies=AuthByUserName.cookies,
    verify=False,
)
CsvTable.encoding = "windows-1251"

DataFrame = pd.DataFrame()
DataFrame = pd.read_table(StringIO(CsvTable.text), delimiter=";").fillna(0)
DataFrame["dt"] = pd.to_datetime(
    DataFrame["SESSION_DATE"], dayfirst=True, utc=False
) + pd.to_timedelta(DataFrame["SESSION_INTERVAL"], unit="h")

connection_vc = connection(0)
conn_cursor = connection_vc.cursor()

vall = ""
rows = len(DataFrame.index)
gtp_rows = int(round(rows / 24, 0))
for r in range(len(DataFrame.index)):
    vall = (
        vall
        + "('"
        + str(DataFrame.GTP_ID[r])
        + "','"
        + str(DataFrame.GTP_NAME[r])
        + "','"
        + str(DataFrame.dt[r])
        + "','"
        + str(DataFrame.SESSION_DATE[r])
        + "','"
        + str(DataFrame.SESSION_NUMBER[r])
        + "','"
        + str(DataFrame.SESSION_INTERVAL[r])
        + "','"
        + str(DataFrame.TG[r]).replace(",", ".")
        + "','"
        + str(DataFrame.PminPDG[r]).replace(",", ".")
        + "','"
        + str(DataFrame.PmaxPDG[r]).replace(",", ".")
        + "','"
        + str(DataFrame.PVsvgo[r]).replace(",", ".")
        + "','"
        + str(DataFrame.PminVsvgo[r]).replace(",", ".")
        + "','"
        + str(DataFrame.PmaxVsvgo[r]).replace(",", ".")
        + "','"
        + str(DataFrame.PminBR[r]).replace(",", ".")
        + "','"
        + str(DataFrame.PmaxBR[r]).replace(",", ".")
        + "','"
        + str(DataFrame.IBR[r]).replace(",", ".")
        + "','"
        + str(DataFrame.CbUP[r]).replace(",", ".")
        + "','"
        + str(DataFrame.CbDown[r]).replace(",", ".")
        + "','"
        + str(DataFrame.CRSV[r]).replace(",", ".")
        + "','"
        + str(DataFrame.TotalBR[r]).replace(",", ".")
        + "','"
        + str(DataFrame.EVR[r]).replace(",", ".")
        + "','"
        + str(DataFrame.OCPU[r]).replace(",", ".")
        + "','"
        + str(DataFrame.OCPS[r]).replace(",", ".")
        + "','"
        + str(DataFrame.Pmin[r]).replace(",", ".")
        + "','"
        + str(DataFrame.Pmax[r]).replace(",", ".")
        + "'"
        + "),"
    )

vall = vall[:-1]
sql = (
    "INSERT INTO pbr_br.pbr_br"
    " (GTP_ID,GTP_NAME,dt,SESSION_DATE,SESSION_NUMBER,SESSION_INTERVAL,TG,PminPDG,PmaxPDG,PVsvgo,PminVsvgo,PmaxVsvgo,PminBR,PmaxBR,IBR,CbUP,CbDown,CRSV,TotalBR,EVR,OCPU,OCPS,Pmin,Pmax)"
    " VALUES "
    + vall
    + ";"
)
conn_cursor.execute(sql)
connection_vc.commit()
connection_vc.close()
print("–î–∞–Ω–Ω—ã–µ –ü–ë–† –≤ –±–∞–∑—É pbr_br –∑–∞–≥—Ä—É–∂–µ–Ω—ã. üèÅ")
print("–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:", str(datetime.datetime.now() - start_time)[0:10])
try:
    telegram(
        "–î–∞–Ω–Ω—ã–µ –ü–ë–† –≤ –±–∞–∑—É pbr_br –∑–∞–≥—Ä—É–∂–µ–Ω—ã. üèÅ"
        + "  ("
        + " ‚àÜ="
        + (str(datetime.datetime.now() - start_time)[0:9])
        + ") \n ID: "
        + id_message
    )
except Exception as exc:
    print(exc)
